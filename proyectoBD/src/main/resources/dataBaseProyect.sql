CREATE DATABASE EmpresaEnergiaCC;

USE EmpresaEnergiaCC;
-- luego ejecut√°s el script completo desde cero

CREATE TABLE usuario (
-- ATRIBUTO
	NRO_IDENTIFICATORIO INT AUTO_INCREMENT,
    DIRECCION VARCHAR(50),

-- RESTRICCIONES
	CONSTRAINT pk_NRO_ID_usuario PRIMARY KEY (NRO_IDENTIFICATORIO)
);

CREATE TABLE motivo(
-- ATRIBUTO
    CODIGO INT,
    DESCRIPCION ENUM('CORTE DE SERVICIO','BAJA TENSION','GARANTIA','PRECIO EXCESIVO','FALLA DE EQUIPO') UNIQUE,
-- RESTRICCIONES
	CONSTRAINT pk_CODIGO_motivo PRIMARY KEY (CODIGO),
    CONSTRAINT value_CODIGO_motivo CHECK (0<CODIGO AND CODIGO<=5)
);

CREATE TABLE material(
-- ATRIBUTO
    CODIGO INT,
    DESCRIPCION VARCHAR(50),
-- RESTRICCIONES
	CONSTRAINT pk_CODIGO_material PRIMARY KEY (CODIGO)
);

CREATE TABLE mtel(
-- ATRIBUTO
    NRO_IDENTIFICATORIO INT,
    TELEFONO BIGINT,
	
-- RESTRICCIONES    
	CONSTRAINT pk_NRO_ID_TELEFONO_mtel PRIMARY KEY (NRO_IDENTIFICATORIO,TELEFONO),
    CONSTRAINT fk_NRO_ID_mtel FOREIGN KEY (NRO_IDENTIFICATORIO) REFERENCES usuario(NRO_IDENTIFICATORIO) 
);

CREATE TABLE persona(
-- ATRIBUTO
	NRO_IDENTIFICATORIO INT,
    DNI INT,
-- RESTRICCIONES    
    CONSTRAINT pk_NRO_ID_persona PRIMARY KEY (NRO_IDENTIFICATORIO),
    CONSTRAINT value_dni CHECK (DNI>0 AND 1000000000>=DNI),
	CONSTRAINT fk_NRO_ID_persona FOREIGN KEY (NRO_IDENTIFICATORIO) REFERENCES usuario(NRO_IDENTIFICATORIO)
);

CREATE TABLE empresa(
	-- ATRIBUTO
	NRO_IDENTIFICATORIO INT,
    CUIT BIGINT,
    CAP_INSTALADA INT,
-- RESTRICCIONES    
    CONSTRAINT pk_NRO_ID_empresa PRIMARY KEY (NRO_IDENTIFICATORIO),
    CONSTRAINT value_cuit CHECK (CUIT>=0 AND CUIT<=99999999999),
    CONSTRAINT fk_NRO_ID_empresa FOREIGN KEY (NRO_IDENTIFICATORIO) REFERENCES usuario(NRO_IDENTIFICATORIO),
    CONSTRAINT value_CAP_INSTALADA_empresa CHECK (0<CAP_INSTALADA AND CAP_INSTALADA<=50000)
);

CREATE TABLE empleado(
	-- ATRIBUTO
	NRO_IDENTIFICATORIO INT,
    NOMBRE VARCHAR(50),
    APELLIDO VARCHAR(50),
    SUELDO INT,
    
-- RESTRICCIONES    
    CONSTRAINT pk_NRO_ID_empleadO PRIMARY KEY (NRO_IDENTIFICATORIO),
    CONSTRAINT sueldo_min CHECK (SUELDO>0),
    CONSTRAINT fk_NRO_ID_empleado FOREIGN KEY (NRO_IDENTIFICATORIO) REFERENCES persona(NRO_IDENTIFICATORIO)
);

CREATE TABLE reclamo(
-- ATRIBUTO
	NRO_RECLAMO INT AUTO_INCREMENT,
    FECHA_RESOLUCION DATE,
    FECHA_Y_HORA DATETIME,
    NRO_IDENTIFICATORIO INT,
    CODIGO INT,
-- RESTRICCIONES
	CONSTRAINT pk_nro_reclamo_reclamo PRIMARY KEY (NRO_RECLAMO),
    CONSTRAINT fk_NRO_ID_reclamo FOREIGN KEY (NRO_IDENTIFICATORIO) REFERENCES usuario(NRO_IDENTIFICATORIO) ON DELETE CASCADE,
    CONSTRAINT fk_codigo_reclamo FOREIGN KEY (CODIGO) REFERENCES motivo(CODIGO)
);

CREATE TABLE llamado(
-- ATRIBUTO
	NRO_RECLAMO INT,
    NRO_LLAMADO INT,
    FECHA_Y_HORA DATETIME,
-- RESTRICCIONES    
    CONSTRAINT pk_NRO_RECLAMO_LLAMADO_llamado PRIMARY KEY (NRO_RECLAMO,NRO_LLAMADO),
    CONSTRAINT fk_NRO_RECLAMO_llamdo FOREIGN KEY (NRO_RECLAMO) REFERENCES reclamo(NRO_RECLAMO) ON DELETE CASCADE
);

CREATE TABLE derivado(
-- ATRIBUTO
	NRO_IDENTIFICATORIO INT,
    NRO_RECLAMO INT,
-- RESTRICCIONES   
	CONSTRAINT pk_NRO_ID_RECLAMO_derivado PRIMARY KEY (NRO_IDENTIFICATORIO,NRO_RECLAMO) ,
    CONSTRAINT fk_NRO_ID_derivado FOREIGN KEY (NRO_IDENTIFICATORIO) REFERENCES empleado(NRO_IDENTIFICATORIO),
    CONSTRAINT fk_NRO_RECLAMO_derivado FOREIGN KEY (NRO_RECLAMO) REFERENCES reclamo(NRO_RECLAMO) ON DELETE CASCADE
);

CREATE TABLE requirio(
-- ATRIBUTO
    NRO_RECLAMO INT,
    CODIGO INT,
    CANTIDAD INT,
-- RESTRICCIONES   
	CONSTRAINT pk_NRO_RECLAMO_CODIGO_requirio PRIMARY KEY (NRO_RECLAMO,CODIGO),
    CONSTRAINT fk_NRO_RECLAMO_requirio FOREIGN KEY (NRO_RECLAMO) REFERENCES reclamo(NRO_RECLAMO) ON DELETE CASCADE,
    CONSTRAINT fk_CODIGO_requirio FOREIGN KEY (CODIGO) REFERENCES material(CODIGO)
);

CREATE TABLE auditoria_borrado_motivo(
    NRO_RECLAMO_BORRADO INT,
    ID_USUARIO_RECLAMO INT,
    FECHA_BORRADO DATETIME,
    USUARIO_MODIFICADOR VARCHAR(50)
);

DELIMITER $$
CREATE TRIGGER auditarMotivoBorrado
	AFTER DELETE ON reclamo -- determino cuando se ejecuta el triger
    FOR EACH ROW
    BEGIN -- que dene hacer el triger
		INSERT INTO auditoria_borrado_motivo(NRO_RECLAMO_BORRADO,ID_USUARIO_RECLAMO, FECHA_BORRADO,USUARIO_MODIFICADOR) -- inserto valores en latabla de auditoria
        VALUES(OLD.NRO_RECLAMO,OLD.NRO_IDENTIFICATORIO,NOW(),CURRENT_USER()); -- ([1]nro de reclamo borrado,[2]ID del usuario que habia hecho el reclamo,
    END;$$                                                                    -- [3] fecha y hora que se borra, [4] usuario que borra) 
    DELIMITER ;

-- Lo pruebo 

-- DESACTIVO SAFE MODE PARA PODER USAR DELETE Y UPDATE
SET SQL_SAFE_UPDATES = 0;  

DELETE FROM reclamo
	WHERE NRO_RECLAMO=3;